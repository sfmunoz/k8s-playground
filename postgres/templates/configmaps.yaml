apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init
data:
  init.sh: |
    #!/bin/sh
    set -x -e -o pipefail
    cp /shared/rclone /usr/local/bin/rclone
    chown 0:0 /usr/local/bin/rclone
    chmod 755 /usr/local/bin/rclone
    date
    #FOLDER="$(rclone lsf rem: | sort -r | awk '/^bck-\d{8}-\d{6}\/$/ { print substr($1,1,19) ; exit 0 ; }')"
    FOLDER=""  # enforce db init
    date
    if [ "$FOLDER" != "" ]
    then
      mkdir -p "${PGDATA}"
      chown postgres:root "${PGDATA}"
      chmod 0700 "${PGDATA}"
      date
      rclone copyto -P "rem:${FOLDER}" "/loc/${FOLDER}"
      date
      tar -C "${PGDATA}" -xvzf "/loc/${FOLDER}/base.tar.gz"
      date
      tar -C "${PGDATA}/pg_wal" -xvzf "/loc/${FOLDER}/pg_wal.tar.gz"
      date
      rm -rf "/loc/${FOLDER}"
    fi
    date
    exec docker-entrypoint.sh postgres

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-docker-entrypoint-initdb-d
data:
  0_pg_hba.sh: |
    #!/bin/sh
    cat >> "${PGDATA}/pg_hba.conf" << __EOF
    host replication all all scram-sha-256
    __EOF
  1_postgresql_conf.sh: |
    #!/bin/sh
    cat << __EOF >> "${PGDATA}/postgresql.conf"
    wal_level = replica
    wal_compression = on
    archive_mode = on
    archive_command = 'rclone copyto -P %p rem:pg_wal/%f'
    archive_timeout = 30
    restore_command = 'rclone copyto -P rem:pg_wal/%f %p'
    __EOF
