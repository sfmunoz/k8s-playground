apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgres-backup
spec:
  schedule: "* * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          initContainers:
          - name: pg-dump
            image: postgres:18.0-alpine3.22
            env:
            - name: PGHOST
              value: "postgres-service"
            - name: PGPORT
              value: "5432"
            - name: PGDATABASE
              value: "postgres"
            - name: PGUSER
              value: "postgres"
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: POSTGRES_PASSWORD
            imagePullPolicy: IfNotPresent
            command:
            - /bin/sh
            - -c
            - "set -x ; set -e ; set -o pipefail ; while ! pg_isready ; do date ; sleep 1 ; done ; pg_dump -c --if-exists | gzip > /loc/pg_dump-$(date +%Y%m%d-%H%M%S).sql.gz"
            volumeMounts:
            - name: vol-loc
              mountPath: /loc
            resources:
              limits:
                memory: "256Mi"
                cpu: "500m"
              requests:
                memory: "128Mi"
                cpu: "250m"
          containers:
{{ include "rclone.container" ( dict "root" . "cmd" "ls -l /loc ; rclone -v copyto /loc rem:" "volumeNameConf" "vol-c" "volumeMounts" .Values.volumeMounts ) | indent 10 }}
          volumes:
{{ include "rclone.volumes" ( dict "root" . "volumeNameConf" "vol-c" "secretName" "rclone-conf" "secretKey" "rcloneConf" "volumes" .Values.volumes ) | indent 10 }}
          restartPolicy: OnFailure
