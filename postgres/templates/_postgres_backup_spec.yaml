{{- define "postgres.backup.spec" -}}
initContainers:
- name: pg-backup
  image: postgres:18.0-alpine3.22
  env:
  - name: PGHOST
    value: "postgres-service"
  - name: PGPORT
    value: "5432"
  - name: PGDATABASE
    value: "postgres"
  - name: PGUSER
    value: "postgres"
  - name: PGPASSWORD
    valueFrom:
      secretKeyRef:
        name: postgres
        key: POSTGRES_PASSWORD
  imagePullPolicy: IfNotPresent
  command: ["/bin/sh","-c"]
  args:
  - |
    set -x -e -o pipefail
    while ! pg_isready ; do date ; sleep 1 ; done
    FOLDER="bck-$(date +%Y%m%d-%H%M%S)"
    date
    pg_basebackup -U postgres -D "/loc/${FOLDER}" -F tar -z -P -v
    date
    chmod -v 0755 "/loc/${FOLDER}"
    chmod -v 0644 "/loc/${FOLDER}/"*
    cat > /loc/upload.sh << __EOF
    set -x -e -o pipefail
    date
    rclone copyto -P "/loc/${FOLDER}" "rem:${FOLDER}"
    date
    __EOF
    cat /loc/upload.sh
  volumeMounts:
  - name: vol-loc
    mountPath: /loc
  resources:
    limits:
      memory: "256Mi"
      cpu: "500m"
    requests:
      memory: "128Mi"
      cpu: "250m"
containers:
- name: rclone
  image: rclone/rclone:sha-6805da6
  command: ["/bin/sh","-c"]
  args:
  - "/bin/sh /loc/upload.sh"
  securityContext:
    runAsNonRoot: true
    runAsUser: 1009
    runAsGroup: 1009
  resources:
    requests:
      memory: "256Mi"
      cpu: "200m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  volumeMounts:
  - name: vol-c
    mountPath: /config/rclone
    readOnly: true
  - name: vol-loc
    mountPath: /loc
volumes:
- name: vol-c
  secret:
    secretName: postgres-rclone-conf
    items:
    - key: rcloneConf
      path: rclone.conf
- name: vol-loc
  emptyDir: {}
restartPolicy: OnFailure
{{- end -}}
