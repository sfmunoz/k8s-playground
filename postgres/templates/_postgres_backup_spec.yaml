{{- define "postgres.backup.spec" -}}
initContainers:
- name: {{ include "postgres.name" . }}-rclone
  image: {{ .Values.rclone.image }}
  command: ["/bin/sh","-c"]
  args:
  - |
    #!/bin/sh
    cp /usr/local/bin/rclone /shared/rclone
  resources:
    requests:
      memory: "256Mi"
      cpu: "200m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  volumeMounts:
  - name: vol-shared
    mountPath: /shared
containers:
- name: {{ include "postgres.name" . }}-backup
  image: {{ .Values.postgres.image }}
  env:
  - name: PGHOST
    value: {{ include "postgres.service.main" . }}
  - name: PGPORT
    value: "5432"
  - name: PGDATABASE
    value: "postgres"
  - name: PGUSER
    value: "postgres"
  - name: PGPASSWORD
    valueFrom:
      secretKeyRef:
        name: {{ include "postgres.secret.superuser.password" . }}
        key: POSTGRES_PASSWORD
  - name: BACKUP_FULL_KEEP
    value: {{ .Values.postgres.backupFullKeep | default 10 | quote }}
  imagePullPolicy: IfNotPresent
  command: ["/bin/sh","-c"]
  args:
  - |
    set -x -e -o pipefail
    /bin/sh /postgres-backup/backup.sh
    /bin/sh /postgres-backup/cleanup.sh
  volumeMounts:
  - name: vol-c
    mountPath: /root/.config/rclone
    readOnly: true
  - name: vol-c
    mountPath: /var/lib/postgresql/.config/rclone
    readOnly: true
  - name: vol-postgres-backup
    mountPath: /postgres-backup
    readOnly: true
  - name: vol-shared
    mountPath: /shared
  resources:
    limits:
      memory: "256Mi"
      cpu: "500m"
    requests:
      memory: "128Mi"
      cpu: "250m"
volumes:
- name: vol-c
  secret:
    secretName: {{ include "postgres.secret.rclone.conf" . }}
    items:
    - key: rcloneConf
      path: rclone.conf
- name: vol-postgres-backup
  configMap:
    name: {{ include "postgres.configmap.backup" . }}
- name: vol-shared
  emptyDir: {}
restartPolicy: OnFailure
{{- end -}}
