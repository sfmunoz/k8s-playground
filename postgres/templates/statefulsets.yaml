apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "postgres.fullname" . }}
  labels:
    {{- include "postgres.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "postgres.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "postgres.service.main" . }}
  replicas: 1
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "postgres.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.postgres.terminationGracePeriodSeconds | default 60 }}
      initContainers:
      - name: {{ .Chart.Name }}-rclone
        image: {{ .Values.rclone.image }}
        command: ["/bin/sh","-c"]
        args:
        - |
          #!/bin/sh
          cp /usr/local/bin/rclone /shared/rclone
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
        - name: vol-shared
          mountPath: /shared
      containers:
      - name: {{ .Chart.Name }}-db
        image: {{ .Values.postgres.image }}
        command: ["/bin/sh","-c"]
        args:
        - "exec /bin/sh /postgres-init/init.sh"
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "postgres.secret.superuser.password" . }}
              key: POSTGRES_PASSWORD
        - name: EMPTY
          value: {{ .Values.postgres.empty | ternary "yes" "no" | quote }}
        volumeMounts:
        - name: vol-c
          mountPath: /root/.config/rclone
          readOnly: true
        - name: vol-c
          mountPath: /var/lib/postgresql/.config/rclone
          readOnly: true
        - name: vol-postgres-init
          mountPath: /postgres-init
          readOnly: true
        - name: vol-docker-entrypoint-initdb-d
          mountPath: /docker-entrypoint-initdb.d
          readOnly: true
        - name: vol-shared
          mountPath: /shared
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      volumes:
      - name: vol-c
        secret:
          secretName: {{ include "postgres.secret.rclone.conf" . }}
          items:
          - key: rcloneConf
            path: rclone.conf
      - name: vol-postgres-init
        configMap:
          name: {{ include "postgres.configmap.init" . }}
      - name: vol-docker-entrypoint-initdb-d
        configMap:
          name: {{ include "postgres.configmap.entrypoint" . }}
      - name: vol-shared
        emptyDir: {}
